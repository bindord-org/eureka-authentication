{
  "openapi": "3.0.1",
  "info": {
    "title": "Eureka Resource API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://springdoc.org"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/eureka/resource-server/v1/district": {
      "get": {
        "tags": [
          "district-controller"
        ],
        "operationId": "findAll",
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "List districts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/District"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "district-controller"
        ],
        "operationId": "update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistrictUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Update a district",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/District"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "district-controller"
        ],
        "operationId": "save",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistrictDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Persist a district",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/District"
                }
              }
            }
          }
        }
      }
    },
    "/eureka/resource-server/v1/customer": {
      "get": {
        "tags": [
          "customer-controller"
        ],
        "operationId": "findAll_1",
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "List customers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "customer-controller"
        ],
        "operationId": "update_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Update a customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "customer-controller"
        ],
        "operationId": "save_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Persist a customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/eureka/resource-server/v1/country": {
      "get": {
        "tags": [
          "country-controller"
        ],
        "operationId": "findAll_2",
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "List countrys",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "country-controller"
        ],
        "operationId": "update_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Update a country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "country-controller"
        ],
        "operationId": "save_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Persist a country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          }
        }
      }
    },
    "/eureka/resource-server/v1/this-is-why-we-play": {
      "get": {
        "tags": [
          "this-is-why-we-play-controller"
        ],
        "operationId": "letsDoThis",
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/eureka/resource-server/v1/customer/{id}": {
      "get": {
        "tags": [
          "customer-controller"
        ],
        "operationId": "findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ApiError"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Find by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string"
          },
          "debugMessage": {
            "type": "string"
          },
          "subErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiSubError"
            }
          }
        }
      },
      "ApiSubError": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "rejectedValue": {
            "type": "object"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "DistrictUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "zone": {
            "maximum": 10,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "numericCode": {
            "maxLength": 9,
            "minLength": 3,
            "type": "string",
            "description": "Could be ubigeo code for Peru or another similar code for other countries"
          }
        }
      },
      "District": {
        "required": [
          "numericCode"
        ],
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "zone": {
            "maximum": 10,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "numericCode": {
            "maxLength": 9,
            "minLength": 3,
            "type": "string",
            "description": "Could be ubigeo code for Peru or another similar code for other countries"
          },
          "countryId": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          }
        }
      },
      "CustomerUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 36,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 36,
            "minLength": 2,
            "type": "string"
          },
          "address": {
            "maxLength": 127,
            "minLength": 2,
            "type": "string"
          },
          "phone": {
            "maxLength": 15,
            "minLength": 9,
            "type": "string"
          },
          "profilePhoto": {
            "$ref": "#/components/schemas/Photo"
          },
          "districtId": {
            "maximum": 32767,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Photo": {
        "required": [
          "size",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string",
            "description": "Optional description of the photo"
          },
          "size": {
            "maximum": 4194304,
            "minimum": 5080,
            "type": "integer",
            "description": "Image size expressed in bytes",
            "format": "int32"
          },
          "url": {
            "maxLength": 200,
            "minLength": 36,
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Customer": {
        "required": [
          "email",
          "lastName",
          "name",
          "phone",
          "publicUrl"
        ],
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 36,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 36,
            "minLength": 2,
            "type": "string"
          },
          "identity": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "maximum": 2,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "maxLength": 127,
            "minLength": 2,
            "type": "string"
          },
          "email": {
            "maxLength": 60,
            "minLength": 7,
            "type": "string"
          },
          "document": {
            "maxLength": 12,
            "minLength": 8,
            "type": "string"
          },
          "phone": {
            "maxLength": 15,
            "minLength": 9,
            "type": "string"
          },
          "profilePhoto": {
            "$ref": "#/components/schemas/Json"
          },
          "publicUrl": {
            "maxLength": 127,
            "minLength": 7,
            "type": "string"
          },
          "verifiedEmail": {
            "type": "boolean"
          },
          "districtId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Json": {
        "type": "object"
      },
      "CountryUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "Codes from ISO 3166-1, Alpha-3 code"
          },
          "name": {
            "maxLength": 60,
            "minLength": 2,
            "type": "string"
          },
          "numericCode": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "Numeric code from ISO 3166-1"
          }
        }
      },
      "Country": {
        "required": [
          "numericCode"
        ],
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "Codes from ISO 3166-1, Alpha-3 code"
          },
          "name": {
            "maxLength": 60,
            "minLength": 2,
            "type": "string"
          },
          "numericCode": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "Numeric code from ISO 3166-1"
          }
        }
      },
      "DistrictDto": {
        "required": [
          "countryId",
          "numericCode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "zone": {
            "maximum": 10,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "numericCode": {
            "maxLength": 9,
            "minLength": 3,
            "type": "string",
            "description": "Could be ubigeo code for Peru or another similar code for other countries"
          },
          "countryId": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          }
        }
      },
      "CustomerDto": {
        "required": [
          "email",
          "lastName",
          "name",
          "phone",
          "publicUrl"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 36,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 36,
            "minLength": 2,
            "type": "string"
          },
          "identity": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "maximum": 2,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "maxLength": 127,
            "minLength": 2,
            "type": "string"
          },
          "email": {
            "maxLength": 60,
            "minLength": 7,
            "type": "string",
            "example": "pedropablo.182@gmail.com"
          },
          "document": {
            "maxLength": 12,
            "minLength": 8,
            "type": "string",
            "example": "44448888"
          },
          "phone": {
            "maxLength": 15,
            "minLength": 9,
            "type": "string",
            "example": "999888777"
          },
          "profilePhoto": {
            "$ref": "#/components/schemas/Photo"
          },
          "publicUrl": {
            "maxLength": 127,
            "minLength": 7,
            "type": "string"
          },
          "verifiedEmail": {
            "type": "boolean"
          },
          "districtId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "CountryDto": {
        "required": [
          "numericCode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "Codes from ISO 3166-1, Alpha-3 code"
          },
          "name": {
            "maxLength": 60,
            "minLength": 2,
            "type": "string"
          },
          "numericCode": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "Numeric code from ISO 3166-1"
          }
        }
      }
    },
    "securitySchemes": {
      "basicScheme": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}